Description: CD12352 - Infrastructure as Code Project - Udagram

Parameters:
   # Add your parameters here
   ProjectName:
      Description: This name will be prefixed to all the resources.
      Type: String
   InstanceType:
      Description: EC2 instance type
      Type: String
   AsgDesiredCapacity:
      Type: String
      Description: Desired capacity for the fleet of instances
      Default: 2

Resources:
   # Add your resources here

   #Security group
   LoadBalancerSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
         GroupDescription: !Ref ProjectName
         VpcId:
            Fn::ImportValue: !Sub "${ProjectName}-VPCID"
         SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
   ApplicationSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
         GroupDescription: !Ref ProjectName
         VpcId:
            Fn::ImportValue: !Sub "${ProjectName}-VPCID"
         SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              SourceSecurityGroupId: !Ref LoadBalancerSecurityGroup

   #S3
   S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
         BucketName: "udagram-291831"
         VersioningConfiguration:
            Status: Suspended
         PublicAccessBlockConfiguration:
            BlockPublicAcls: false
         OwnershipControls:
            Rules:
               - ObjectOwnership: ObjectWriter
   S3Role:
      Type: AWS::IAM::Role
      Properties:
         RoleName: !Ref ProjectName
         AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
               - Effect: "Allow"
                 Principal:
                    Service:
                       - "ec2.amazonaws.com"
                 Action:
                    - "sts:AssumeRole"
         Policies:
            - PolicyName: s3
              PolicyDocument:
                 Version: "2012-10-17"
                 Statement:
                    - Effect: Allow
                      Action:
                         - "s3:PutObject"
                         - "s3:GetObject"
                      Resource:
                         - !GetAtt S3Bucket.Arn
   InstanceProfile:
      Type: AWS::IAM::InstanceProfile
      Properties:
         Path: "/"
         Roles:
            - !Ref S3Role

   # We include a portion of the LaunchTemplate resource so you can use the UserData.
   WebAppLaunchTemplate:
      Type: AWS::EC2::LaunchTemplate
      Properties:
         LaunchTemplateData:
            ImageId: ami-0c7217cdde317cfec
            SecurityGroupIds:
               - !Ref ApplicationSecurityGroup
            BlockDeviceMappings:
               - DeviceName: "/dev/sdk"
                 Ebs:
                    VolumeSize: "10"
            InstanceType: !Ref InstanceType
            IamInstanceProfile:
               Name: !Ref InstanceProfile
            UserData:
               Fn::Base64: |
                  #!/bin/bash
                  apt-get update -y
                  apt-get install apache2 -y
                  systemctl start apache2.service
                  cd /var/www/html
                  echo "it works! Udagram, Udacity" > index.html

   TargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
         HealthCheckIntervalSeconds: 10
         HealthCheckPath: /
         HealthCheckProtocol: HTTP
         HealthCheckTimeoutSeconds: 8
         HealthyThresholdCount: 2
         Port: 80
         Protocol: HTTP
         UnhealthyThresholdCount: 5
         VpcId:
            Fn::ImportValue:
               Fn::Sub: "${ProjectName}-VPCID"

   AutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
         VPCZoneIdentifier:
            - Fn::ImportValue: !Sub ${ProjectName}-PRIV-NETS
         LaunchTemplate:
            LaunchTemplateId: !Ref WebAppLaunchTemplate
            Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
         MinSize: "2"
         DesiredCapacity: !Ref AsgDesiredCapacity
         MaxSize: "4"
         TargetGroupARNs:
            - Ref: TargetGroup

   LoadBalancer:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
         Subnets:
            - Fn::ImportValue: !Sub "${ProjectName}-PUB1-SN"
            - Fn::ImportValue: !Sub "${ProjectName}-PUB2-SN"
         SecurityGroups:
            - Ref: LoadBalancerSecurityGroup
   Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
         DefaultActions:
            - Type: forward
              TargetGroupArn:
                 Ref: TargetGroup
         LoadBalancerArn:
            Ref: LoadBalancer
         Port: "80"
         Protocol: HTTP
   ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
         Actions:
            - Type: forward
              TargetGroupArn: !Ref "TargetGroup"
         Conditions:
            - Field: path-pattern
              Values: [/]
         ListenerArn: !Ref "Listener"
         Priority: 1
Outputs:
   WebURL:
      Description: Website URL
      Value: !Join ["", ["http://", !GetAtt LoadBalancer.DNSName]]
      Export:
         Name: !Sub ${ProjectName}-LB-DNSName
