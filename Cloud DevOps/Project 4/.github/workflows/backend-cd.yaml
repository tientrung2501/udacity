name: BE CD

on:
  push:
    branches:
      - main
    paths:
      - "starter/backend/**"
  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code in repository
        uses: actions/checkout@v4

      - name: Using Python 10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install depends
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Run lint
        run: pipenv run lint
        working-directory: starter/backend

  testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code in repository
        uses: actions/checkout@v4

      - name: Using Python 10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install depends
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Testing
        run: pipenv run test
        working-directory: starter/backend

  buiding:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code in repository
        uses: actions/checkout@v4

      - name: Using Python 10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install depends
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --dev
        working-directory: starter/backend

      - name: Testing
        run: pipenv run test
        working-directory: starter/backend

  deploy:
    needs: [buiding]
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code in repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/backend
          tags: |
            type=sha       
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: starter/backend
          tags: ${{ steps.meta.outputs.tags }}
      - name: Configure k8s cluster
        run: aws eks update-kubeconfig --name cluster --region us-east-1
      - name: Deploy to k8s
        working-directory: starter/backend/k8s
        run: |
          kustomize edit set image backend=${{ steps.meta.outputs.tags }}
          kustomize build | kubectl apply -f -
